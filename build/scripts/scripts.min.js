var weatherApp=angular.module("weatherApp",["ngRoute","ngResource"]);weatherApp.service("cityService",function(){this.city}),weatherApp.controller("forecastController",["$scope","$resource","cityService","$routeParams",function(e,t,o,r){if(e.city=o.city,e.days=r.days||2,e.weatherAPI=t("http://api.openweathermap.org/data/2.5/forecast/daily",{callback:"JSON_CALLBACK"},{get:{method:"JSONP"}}),e.weatherResult=e.weatherAPI.get({q:e.city,cnt:e.days,APPID:"3ca4cb682481154e17368d817de04cb4",units:"metric"}),!navigator.onLine){console.log("No network connection");var n=indexedDB.open("weatherInfo",2);n.onsuccess=function(t){if(console.log("Success: Opened Database in offline mode..."),db=t.target.result,!db.objectStoreNames.contains("cities")){var o=db.createObjectStore("cities",{keyPath:"id",autoIncrement:!0});o.createIndex("id","id",{unique:!1}),console.log("Successfully created Object Store")}var r=db.transaction(["cities"],"readonly"),n=r.objectStore("cities"),a=n.index("id");a.openCursor().onsuccess=function(t){var o=t.target.result,r=e.city;console.log(r),o&&o.value.city==r&&(console.log(o.value.today_temperature),console.log(o.value.tomorrow_temperature),$("#offlineTempToday").append("Today temperature is "+o.value.today_temperature+"</br>"),$("#offlineTempTomorrow").append("Tomorrow temperature is "+o.value.tomorrow_temperature+"</br>")),o["continue"]()}}}var a="http://api.openweathermap.org/data/2.5/forecast/daily?q="+e.city+"&cnt="+e.days+"&APPID=3ca4cb682481154e17368d817de04cb4&units=metric";$.ajax({url:a,dataType:"json",jsonp:"callback",success:function(e){console.log(e);var t=indexedDB.open("weatherInfo",2);t.onupgradeneeded=function(e){var t=e.target.result;if(!t.objectStoreNames.contains("cities")){var o=t.createObjectStore("cities",{keyPath:"id",autoIncrement:!0});o.createIndex("id","id",{unique:!1}),console.log("Successfully created Object Store")}},t.onsuccess=function(e){console.log("Success: Opened Database..."),db=e.target.result},t.onerror=function(e){console.log("Error: Could Not Open Database...")};var o=db.transaction(["cities"],"readwrite"),r=o.objectStore("cities");console.log(e),console.log(e.city.name),console.log(e.list[0].temp.day),console.log(e.list[1].temp.day);var n={city:e.city.name,today_temperature:e.list[0].temp.day,tomorrow_temperature:e.list[1].temp.day},a=r.index("id");a.openCursor().onsuccess=function(t){var o=t.target.result;if(o){if(o.value.city!=e.city.name){var a=r.add(n);a.onerror=function(e){console.log("Error",e.target.error.name)},a.onsuccess=function(e){console.log("Woot! Added city to DB")}}o["continue"]()}else{var a=r.add(n);a.onerror=function(e){console.log("Error",e.target.error.name)},a.onsuccess=function(e){console.log("Woot! Added city to DB")}}}}}),e.convertToFahrenheit=function(e){return Math.round(e)},e.convertToDate=function(e){return new Date(1e3*e)},console.log(e.weatherResult)}]),weatherApp.controller("homeController",["$scope","cityService",function(e,t){navigator.onLine||($("#offlineAlert").append("No network connection. Please use cached data.<br> Cached cities include: <br>"),$("#offlineAlert").addClass("alert alert-warning"));var o=indexedDB.open("weatherInfo",2);o.onsuccess=function(e){if(console.log("Success: Opened Database in offline mode..."),db=e.target.result,!db.objectStoreNames.contains("cities")){var t=db.createObjectStore("cities",{keyPath:"id",autoIncrement:!0});t.createIndex("id","id",{unique:!1}),console.log("Successfully created Object Store")}var o=db.transaction(["cities"],"readonly"),r=o.objectStore("cities"),n=r.index("id");n.openCursor().onsuccess=function(e){var t=e.target.result;t&&(console.log(t.value.city),navigator.onLine||($("#cities").append("<option value='"+t.value.city+"'>"),$("#offlineAlert").append(t.value.city+"<br>"))),t["continue"]()}},$("input").keyup(function(){$("#city").val()<1?($("#alert").html("Please enter a city"),$("#alert").addClass("alert alert-danger"),$("#getForecastBtn").attr("disabled","disabled")):($("#alert").html(" "),$("#getForecastBtn").removeAttr("disabled"),$("#alert").removeClass("alert alert-danger"))}),e.city=function(){},e.city=t.city,e.getLocation=function(){function t(){a=new google.maps.Geocoder}function o(t,o){var r=new google.maps.LatLng(t,o);a.geocode({latLng:r},function(t,o){if(o==google.maps.GeocoderStatus.OK)if(t[1]){console.log(t[3].formatted_address),e.city=t[3].formatted_address,$("#alert").html(" "),$("#getForecastBtn").removeAttr("disabled"),$("#alert").removeClass("alert alert-danger");for(var r=0;r<t[0].address_components.length;r++)for(var n=0;n<t[0].address_components[r].types.length;n++)if("administrative_area_level_1"==t[0].address_components[r].types[n]){city=t[0].address_components[r];break}}else alert("No results found");else alert("Geocoder failed due to: "+o)})}navigator.geolocation?(console.log("Geolocation is supported!"),t()):console.log("Geolocation is not supported for this Browser/OS version yet.");var r,n=function(e){r=e,o(e.coords.latitude,e.coords.longitude),o(e.coords.latitude,e.coords.longitude)};navigator.geolocation.getCurrentPosition(n);var a},e.getLocation(),e.$watch("city",function(){t.city=e.city}),document.getElementById("city").innerHTML=e.city}]),weatherApp.config(["$routeProvider",function(e){e.when("/",{templateUrl:"home.html",controller:"homeController"}).when("/forecast",{templateUrl:"forecast.html",controller:"forecastController"}).when("/forecast/:days",{templateUrl:"forecast.html",controller:"forecastController"})}]);